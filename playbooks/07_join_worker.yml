---
- name: Install kubelet and kubeadm
  hosts: k8s_workers
  remote_user: root
  gather_facts: no
  vars:
    local_docker_config_path: ../docker/daemon.json
    local_data_path: ../data
    k8s_master1_inventory_hostname: k8s-master-1

  tasks:
    - name: Disable swap partition in /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '^\s*/dev/mapper/centos-swap'
        replace: "# /dev/mapper/centos-swap"

    - name: Disable swap partition immediately
      command: "swapoff -a"

    - name: Disable firewalld.service immediately and when system startup
      systemd:
        name: firewalld.service
        enabled: no
        state: stopped

    - name: Disable SELINUX when system startup
      lineinfile:
        path: /etc/selinux/config
        regexp: "^SELINUX="
        line: SELINUX=disabled

    - name: Disable SELINUX immediately
      command: "setenforce 0"
  
    - name: Add docker offical repo
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
        enabled: yes
        gpgcheck: yes
        gpgcakey: https://download.docker.com/linux/centos/gpg
        exclude:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        file: docker-ce
        state: present

    - name: Add rpm key
      rpm_key:
        key: https://download.docker.com/linux/centos/gpg
        state: present

    - name: Install docker
      yum:
        name:
          - docker-ce-19.03.11
          - docker-ce-cli-19.03.11
          - containerd.io-1.2.13
        disable_excludes: docker-ce-stable
        state: present

    - name: Create /etc/docker if it does not exist
      file:
        path: /etc/docker
        state: directory
        mode: "0755"

    - name: Configure docker daemon
      copy:
        src: "{{ local_docker_config_path }}"
        dest: /etc/docker/daemon.json
        mode: "0644"

    - name: Start and enabled auto-start docker daemon
      systemd:
        name: docker.service
        daemon_reload: yes
        enabled: yes
        state: started
    - name: Make sure iptables is allowed to check bridge traffic (1/2)
      blockinfile:
        path: /etc/sysctl.d/k8s.conf
        create: yes
        block: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1

    - name: Make sure iptables is allowed to check bridge traffic (2/2)
      command: "sysctl --system"

    - name: Add Kubernetes repo
      yum_repository:
        name: kubernetes
        description: Kubernetes - $basearch
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
        enabled: yes
        gpgcheck: yes
        gpgcakey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude:
          - kubelet
          - kubeadm
        file: kubernetes
        state: present

    - name: Add rpm key
      rpm_key:
        key: "{{ item.key_url }}"
        state: present
      loop:
        - { key_url: https://packages.cloud.google.com/yum/doc/yum-key.gpg }
        - { key_url: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg }
        
    - name: Install kubelet, kubeadm and also add ipvsadm here for enabling ipvs mode for kube-proxy
      yum:
        name:
          - kubelet
          - kubeadm
          - ipvsadm
        disable_excludes: kubernetes
        state: present

    - name: add ipvs module when next os startup
      copy:
        dest: /etc/sysconfig/modules/ipvs.modules
        content: |
          #!/bin/bash
          modprobe -- ip_vs
          modprobe -- ip_vs_rr 
        mode: "0755"

    - name: load ipvs module immediately
      command: /etc/sysconfig/modules/ipvs.modules

    - name: Start and enabled auto-start kubelet
      systemd:
        name: kubelet.service
        daemon_reload: yes
        enabled: yes
        state: started

    - name: Run kubeadm join script
      script: 
        cmd: "{{ local_data_path }}/{{ k8s_master1_inventory_hostname }}-kubeadm_join/kubeadm_join_worker.sh"
        executable : bash
        creates: /etc/kubernetes/admin.conf
      when: inventory_hostname != k8s_master1_inventory_hostname
